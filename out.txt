test.c:2:1: punctuator *
test.c:2:3: identifier MM
test.c:2:7: identifier tttt
test.c:2:13: identifier ppppppp
test.c:2:23: identifier a
test.c:2:25: punctuator =
test.c:2:28: identifier b
test.c:2:30: punctuator *
test.c:2:33: identifier c
test.c:3:1: punctuator *
test.c:6:1: identifier ccccc
test.c:6:8: identifier cccc
test.c:6:12: punctuator *
test.c:6:15: identifier fff
test.c:6:18: punctuator (
test.c:6:20: identifier iii
test.c:6:23: punctuator )
test.c:6:25: punctuator {
test.c:7:5: identifier rrrrrr
test.c:7:13: string-literal "abcd"
test.c:7:14: string-literal ";
}

// main()
int     main    (   int argc, char **argv) {





    int a123 =12;
    int a = (1 + 2234);
    float g = 2234.0;
    float r = 0.00;
    float dy = .9;
    int b = a++;
    int c = ++b;
    int d = a+++++a;
    int *ptr = &a;
    
    char abc[] = "
test.c:7:15: string-literal "ghef[]\n/**/"
test.c:7:16: string-literal ";
    char[] abc = "
test.c:7:17: string-literal "'xyz'"
test.c:7:18: string-literal ";

    double e = (a + (c*d) / a);

    printf("
test.c:7:19: string-literal "Hi %d \n"
