test.c:1:8: identifier l
test.c:1:9: punctuator (
test.c:1:10: punctuator )
test.c:1:11: punctuator ;
test.c:2:6: identifier m
test.c:2:8: punctuator =
test.c:2:10: identifier n
test.c:3:1: punctuator +
test.c:3:3: identifier p
test.c:3:4: punctuator ;
test.c:10:1: keyword const
test.c:10:7: keyword char
test.c:10:11: punctuator *
test.c:10:13: identifier foo
test.c:10:16: punctuator (
test.c:10:17: keyword int
test.c:10:20: punctuator )
test.c:10:22: punctuator {
test.c:11:5: keyword return
test.c:11:12: string-literal "abcd"
test.c:11:18: punctuator ;
test.c:12:1: punctuator }
test.c:22:5: keyword int
test.c:22:13: identifier main
test.c:22:21: punctuator (
test.c:22:25: keyword int
test.c:22:29: identifier argc
test.c:22:33: punctuator ,
test.c:22:35: keyword char
test.c:22:40: punctuator *
test.c:22:41: punctuator *
test.c:22:42: identifier argv
test.c:22:46: punctuator )
test.c:22:48: punctuator {
test.c:23:9: keyword char
test.c:23:14: identifier abcd
test.c:23:18: punctuator [
test.c:23:19: punctuator ]
test.c:23:21: punctuator =
test.c:23:23: string-literal "Some                        Sample                        String"
test.c:25:31: punctuator ;
test.c:26:9: keyword char
test.c:26:14: identifier x
test.c:26:16: punctuator =
test.c:27:9: keyword char
test.c:27:14: identifier c
test.c:27:16: punctuator =
test.c:27:18: identifier ytt
test.c:27:21: punctuator ;
test.c:28:9: keyword char
test.c:28:14: identifier d
test.c:28:16: punctuator =
test.c:29:9: keyword char
test.c:29:14: identifier r
test.c:29:16: punctuator =
test.c:29:17: constant '"'
test.c:29:21: punctuator ;
test.c:30:9: keyword char
test.c:30:14: identifier t
test.c:30:16: punctuator =
test.c:30:17: constant '\\'
test.c:30:21: punctuator ;
test.c:31:9: keyword char
test.c:31:14: identifier y
test.c:31:16: punctuator =
test.c:31:17: constant '\?'
test.c:31:21: punctuator ;
test.c:32:9: keyword char
test.c:32:14: identifier u
test.c:32:16: punctuator =
test.c:33:9: keyword char
test.c:33:14: identifier i
test.c:33:16: punctuator =
test.c:33:17: constant '?'
test.c:33:21: punctuator ;
test.c:34:9: keyword char
test.c:34:14: identifier g
test.c:34:16: punctuator =
test.c:34:18: constant '\b'
test.c:34:22: punctuator ;
test.c:36:9: keyword char
test.c:36:14: identifier k
test.c:36:16: punctuator =
test.c:36:19: identifier g
test.c:38:9: keyword char
test.c:38:14: identifier b
test.c:38:16: punctuator =
test.c:38:20: punctuator ;
test.c:39:9: keyword char
test.c:39:14: identifier h
test.c:39:16: punctuator =
test.c:39:18: constant 'a'
test.c:39:22: punctuator ;
test.c:42:9: keyword int
test.c:42:14: identifier a123
test.c:42:19: punctuator =
test.c:42:20: constant 12
test.c:42:22: punctuator ;
test.c:43:9: keyword int
test.c:43:13: identifier a
test.c:43:15: punctuator =
test.c:43:17: punctuator (
test.c:43:18: constant 1
test.c:43:20: punctuator +
test.c:43:22: constant 2234
test.c:43:26: punctuator )
test.c:43:27: punctuator ;
test.c:44:9: keyword float
test.c:44:15: identifier g
test.c:44:17: punctuator =
test.c:44:19: constant 2234.0
test.c:44:25: punctuator ;
test.c:45:9: keyword float
test.c:45:15: identifier r
test.c:45:17: punctuator =
test.c:45:19: constant 0.00
test.c:45:23: punctuator ;
test.c:46:9: keyword float
test.c:46:15: identifier dy
test.c:46:18: punctuator =
test.c:46:20: punctuator .
test.c:46:21: constant 9
test.c:46:22: punctuator ;
test.c:47:9: keyword int
test.c:47:13: identifier b
test.c:47:15: punctuator =
test.c:47:17: identifier a
test.c:47:18: punctuator ++
test.c:47:20: punctuator ;
test.c:48:9: keyword int
test.c:48:13: identifier c
test.c:48:15: punctuator =
test.c:48:17: punctuator ++
test.c:48:19: identifier b
test.c:48:20: punctuator ;
test.c:49:9: keyword int
test.c:49:13: identifier d
test.c:49:15: punctuator =
test.c:49:17: identifier a
test.c:49:18: punctuator ++
test.c:49:20: punctuator ++
test.c:49:22: punctuator +
test.c:49:23: identifier a
test.c:49:24: punctuator ;
test.c:50:9: keyword int
test.c:50:13: punctuator *
test.c:50:14: identifier ptr
test.c:50:18: punctuator =
test.c:50:20: punctuator &
test.c:50:21: identifier a
test.c:50:22: punctuator ;
test.c:53:9: keyword char
test.c:53:14: identifier uio
test.c:53:18: punctuator =
test.c:53:20: string-literal "\a"
test.c:54:13: identifier str1
test.c:54:17: punctuator [
test.c:54:18: punctuator ]
test.c:54:20: punctuator =
test.c:54:22: string-literal "\\"
test.c:55:13: identifier str2
test.c:55:17: punctuator [
test.c:55:18: punctuator ]
test.c:55:20: punctuator =
test.c:55:22: string-literal "\\\\"
test.c:56:13: identifier str3
test.c:56:17: punctuator [
test.c:56:18: punctuator ]
test.c:56:20: punctuator =
test.c:56:22: string-literal "\\\\\\"
test.c:58:13: keyword char
test.c:58:18: identifier abc
test.c:58:21: punctuator [
test.c:58:22: punctuator ]
test.c:58:24: punctuator =
test.c:58:26: string-literal "ghef[]\j/**/"
test.c:58:40: punctuator ;
test.c:59:9: keyword char
test.c:59:13: punctuator [
test.c:59:14: punctuator ]
test.c:59:16: identifier abc
test.c:59:20: punctuator =
test.c:59:22: string-literal "'xy\fz'"
test.c:59:31: punctuator ;
